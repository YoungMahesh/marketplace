generator client {
    provider        = "prisma-client-js"
    previewFeatures = []
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Item {
    id        Int        @id
    name      String
    image     String
    price     Float
    cartItems CartItem[]
}

model Cart {
    id         Int        @id @default(autoincrement())
    userId     String     @unique
    user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
    cartItems  CartItem[]
    totalPrice Int        @default(0)
}

model CartItem {
    id       Int  @id @default(autoincrement())
    cartId   Int
    cart     Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)
    itemId   Int
    item     Item @relation(fields: [itemId], references: [id], onDelete: Cascade)
    quantity Int

    @@unique([cartId, itemId])
}

model User {
    id            String    @id @default(cuid())
    name          String
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    userCred      UserCred?
    cart          Cart?
    payments      Payment[]
}

model UserCred {
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    userId   String @unique
    user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Payment {
    id      Int           @id @default(autoincrement())
    txnHash String        @unique
    items   Json[]
    date    DateTime      @default(now())
    amount  Float
    userId  String
    user    User          @relation(fields: [userId], references: [id], onDelete: Cascade)
    status  PaymentStatus @default(PENDING)
}

enum PaymentStatus {
    SUCCESS
    PENDING
}
